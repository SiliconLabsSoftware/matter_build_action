name: Reusable CLA validation

on:
  workflow_call:
    inputs:
      remote_org:
        type: string
        default: "SiliconLabsSoftware"
      remote_repo:
        type: string
        default: "contributor-license-agreements"
      signatures_path:
        type: string
        default: "cla_signatures_db.json"
      document_url:
        type: string
        default: "https://github.com/SiliconLabsSoftware/agreements-and-guidelines/blob/main/contributor_license_agreement.md"
      allowlist:
        type: string
        default: "silabs-*,bot*"
      branch:
        type: string
        default: "cla-database"
      runner:
        type: string
        default: "ubuntu-latest"
    secrets:
      CLA_APP_ID:
        required: true
      CLA_APP_PRIVATE_KEY:
        required: true

permissions:
  actions: write
  contents: read
  pull-requests: write
  statuses: write

jobs:
  cla:
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Create CLA Assistant Lite bot token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.CLA_APP_ID }}
          private-key: ${{ secrets.CLA_APP_PRIVATE_KEY }}
          owner: ${{ inputs.remote_org }}
          repositories: ${{ inputs.remote_repo }}

      - name: Mask generated token
        run: echo "::add-mask::${{ steps.app-token.outputs.token }}"

      - name: CLA Assistant
        if: ${{ contains(github.event.comment.body, 'I have read the CLA Document and I hereby sign the CLA') }} || github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        uses: SiliconLabsSoftware/action-cla-assistant@silabs_flavour_v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PERSONAL_ACCESS_TOKEN: ${{ steps.app-token.outputs.token }}
        with:
          path-to-signatures: ${{ inputs.signatures_path }}
          path-to-document: ${{ inputs.document_url }}
          branch: ${{ inputs.branch }}
          allowlist: ${{ inputs.allowlist }}
          remote-organization-name: ${{ inputs.remote_org }}
          remote-repository-name: ${{ inputs.remote_repo }}
          create-file-commit-message: "Created the CLA database file. CLA Assistant Lite bot created this file."
          signed-commit-message: "$contributorName has signed the CLA in $owner/$repo#$pullRequestNo"
