name: Bootstrap
description: Bootstrap
inputs:
  platform:
    description: "Platform name"
    required: false
    default: none

runs:
  using: "composite"
  steps:
    - name: Determine bootstrap cache configuration
      id: prepare
      shell: bash
      run: |
        # Determine bootstrap cache configuration
        # In addition to the various setup files, the work directory matters as well,
        # because the bootstrapped Pigweed environment contains absolute paths.
        echo "Calculating bootstrap cache key for '$PWD'"
        FILES_HASH="${{ hashFiles('third_party/matter_sdk/scripts/setup/*', 'third_party/matter_sdk/third_party/pigweed/**') }}"
        case "$RUNNER_OS" in
          macOS) OS_HASH="$(sw_vers | shasum -a 256 | cut -d' ' -f1);;
          *)     OS_HASH="$(shasum -a 256 /etc/lsb-release | cut -d' ' -f1);;
        esac
        PYTHON_HASH="$(python --version | shasum -a 256 | cut -d' ' -f1)"
        FINAL_HASH="$(echo "$PWD:$FILES_HASH:$OS_HASH:$PYTHON_HASH" | shasum -a 256 | cut -d' ' -f1)"
        echo key="${RUNNER_OS}-${RUNNER_ARCH}-${{ inputs.platform }}-${FINAL_HASH}" | tee -a "$GITHUB_OUTPUT"

    - name: Bootstrap from cache
      id: restore
      uses: actions/cache/restore@v4
      with:
        key: ${{ steps.prepare.outputs.key }}
        path: |
          .environment
          third_party/matter_sdk/build_overrides/pigweed_environment.gni

    - name: Run bootstrap
      if: ${{ steps.restore.outputs.cache-hit != 'true' }}
      env:
        PW_NO_CIPD_CACHE_DIR: 1
        PW_ENVSETUP_NO_BANNER: 1
      shell: bash
      run: source third_party/matter_sdk/scripts/bootstrap.sh -p all,${{ inputs.platform }}

    - name: Save bootstrap cache
      uses: actions/cache/save@v4
      if: ${{ steps.restore.outputs.cache-hit != 'true' }}
      with:
        key: ${{ steps.prepare.outputs.key }}
        path: |
          .environment
          third_party/matter_sdk/build_overrides/pigweed_environment.gni